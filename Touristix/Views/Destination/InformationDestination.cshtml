@model Touristix.Models.DestinationModel

@{
    ViewBag.Title = "Information";
}

<img src= "/Images/Destinations/@Model.Image" alt="Image" />

<script type="text/javascript">
    function ObtenirBatiment(Id, NomObjet) {
        var xmlhttp;
        if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
            xmlhttp = new XMLHttpRequest();
        }
        else {// code for IE6, IE5
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        }
        var url = '@Url.Action("ObtenirBatiment")';

        xmlhttp.onreadystatechange = function () {
            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                Succes(xmlhttp.responseText);
            }
        }
        var params = "Id=" + Id
        xmlhttp.open("POST", url);
        xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        xmlhttp.setRequestHeader("Content-length", params.length);
        xmlhttp.setRequestHeader("Connection", "close");
        xmlhttp.send(params);

        function Succes(response) {
            var Batiment = JSON.parse(response);
            var i;
            var out = "<a href=";
            out += "/Destination/InformationBatiment/" + Id + ">"
            out += Batiment.Nom;
            out += "</a>"

            document.getElementById(NomObjet).innerHTML = out;
        }
    }
    function ObtenirActivite(Id, NomObjet) {
        var xmlhttp;
        if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
            xmlhttp = new XMLHttpRequest();
        }
        else {// code for IE6, IE5
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        }
        var url = '@Url.Action("ObtenirActivite")';

        xmlhttp.onreadystatechange = function () {
            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                Succes(xmlhttp.responseText);
            }
        }
        var params = "Id=" + Id
        xmlhttp.open("POST", url);
        xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        xmlhttp.setRequestHeader("Content-length", params.length);
        xmlhttp.setRequestHeader("Connection", "close");
        xmlhttp.send(params);

        function Succes(response) {
            var Activite = JSON.parse(response);
            var i;
            var out = "<a href=";
            out += "/Destination/InformationActivite/" + Id + ">"
            out += Activite.Nom;
            out += "</a>"

            document.getElementById(NomObjet).innerHTML = out;
        }
    }
</script>

<fieldset>
    <h2>@Html.DisplayFor(model => model.Nom)</h2>
    <dl> 
    <dt>@Html.DisplayNameFor(model => model.Pays)</dt>
    <dd>@Html.DisplayFor(model => model.Pays)</dd>
    <dt>@Html.DisplayNameFor(model => model.Region)</dt>
    <dd>@Html.DisplayFor(model => model.Region)</dd>
    <dt>@Html.DisplayNameFor(model => model.Ville)</dt>
    <dd>@Html.DisplayFor(model => model.Ville)</dd>
    <dt>@Html.DisplayNameFor(model => model.Apercu)</dt>
    <dd>@Html.DisplayFor(model => model.Apercu)</dd>
    <dt>@Html.DisplayNameFor(model => model.Details)</dt>
    <dd>@Html.DisplayFor(model => model.Details)</dd>
    <dt><legend>Bâtiments</legend></dt>
      
        @{
            string[] ArrayParametreBatiment = new string[1];
            ArrayParametreBatiment[0] = ";";
            string[] ArrayBatiment = @Model.BatimentIds.Split(ArrayParametreBatiment, StringSplitOptions.RemoveEmptyEntries);
        }
        @for (int B = 0; B < ArrayBatiment.Length; B++)
        {
            int IdActif = Convert.ToInt32(ArrayBatiment[B]);
            string IdNom = "Batiment" + B;
            <dt id=@IdNom></dt>

            <script type="text/javascript">ObtenirBatiment(@IdActif, "Batiment" + @B);</script>
        }
        <br />
    <dt><legend>Activités</legend></dt>
        @{
            string[] ArrayParametreActivite = new string[1];
            ArrayParametreActivite[0] = ";";
            string[] ArrayActivite = @Model.ActiviteIds.Split(ArrayParametreActivite, StringSplitOptions.RemoveEmptyEntries);
        }
        @for (int B = 0; B < ArrayActivite.Length; B++)
        {
            int IdActif = Convert.ToInt32(ArrayActivite[B]);
            string IdNom = "Activite" + B;
            <dt id=@IdNom></dt>

            <script type="text/javascript">ObtenirActivite(@IdActif, "Activite" + @B);</script>
        }
    </dl> 
</fieldset>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
<script>
    var map;
    function initialize()
    {
        var mapOptions = {
            zoom: 8,
            center: new google.maps.LatLng(-34.397, 150.644)
        };
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

        new google.maps.Geocoder().geocode({ 'address': "@Model.Pays, @Model.Region, @Model.Ville, @Model.Nom" }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                var marker = new google.maps.Marker({
                    map: map,
                    draggable: true
                });
                marker.setPosition(results[0].geometry.location);
                map.setCenter(results[0].geometry.location);
                map.setZoom(15);
            }
            else {
                alert("Geocode was not successful for the following reason: " + status);
            }
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

</script>
@section Map {
<div id="map-canvas" style="width: 100%; height: 480px; margin: 0px; padding: 0px;">
}
<p>
    @Html.ActionLink("Retour à l'index", "Index")
</p>



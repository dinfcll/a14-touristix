@model Touristix.Models.DestinationModel

@{
    ViewBag.Title = "Modifier";
}

<script type="text/javascript" src="/Scripts/destination.js"></script>

<legend>Modifier destination</legend>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.BatimentIds)
        @Html.HiddenFor(model => model.ActiviteIds)
        
        @Html.Hidden("DernierBatiment", @Model.BatimentIds.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries).Length)
        @Html.Hidden("DerniereActivite", @Model.ActiviteIds.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries).Length)
        
        <div class="form-group">
            @Html.LabelFor(model => model.Nom)
            @Html.TextBoxFor(model => model.Nom, new
       {
           @class = "form-control",
           placeholder = "Entrez nom",
           type = "text"
       })
            @Html.ValidationMessageFor(model => model.Nom)
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Ville)
            @Html.TextBoxFor(model => model.Ville, new
       {
           @class = "form-control",
           placeholder = "Entrez ville",
           type = "text"
       })
            @Html.ValidationMessageFor(model => model.Ville)
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Region)
            @Html.TextBoxFor(model => model.Region, new
       {
           @class = "form-control",
           placeholder = "Entrez region",
           type = "text"
       })
            @Html.ValidationMessageFor(model => model.Region)
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Pays)
            @Html.TextBoxFor(model => model.Pays, new
       {
           @class = "form-control",
           placeholder = "Entrez pays",
           type = "text"
       })
            @Html.ValidationMessageFor(model => model.Pays)
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Image)
            @Html.TextBoxFor(model => model.Image, new
       {
           @class = "form-control",
           placeholder = "Entrez image",
           type = "text"
       })
            @Html.ValidationMessageFor(model => model.Image)
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Apercu)
            @Html.TextAreaFor(model => model.Apercu, new { @class = "form-control", placeholder = "Entrez aperçu" })
            @Html.ValidationMessageFor(model => model.Apercu)
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Details)
            @Html.TextAreaFor(model => model.Details, new { @class = "form-control", placeholder = "Entrez détails" })
            @Html.ValidationMessageFor(model => model.Details)
        </div>
        
        <div id="Batiments">
        @{
    string[] ArrayParametreBatiment = new string[1];
    ArrayParametreBatiment[0] = ";";
    string[] ArrayBatiment = @Model.BatimentIds.Split(ArrayParametreBatiment, StringSplitOptions.RemoveEmptyEntries);
        }
        @for (int B = 0; B < ArrayBatiment.Length; B++)
        {
            int IdActif = Convert.ToInt32(ArrayBatiment[B]);
            @Html.DropDownList("Batiment" + B, new SelectList(string.Empty, "Value", "Text"), "Please select a State",
                                        new { style = "width:250px", @class = "dropdown1", onchange = "AjoutDropDownListBatiment(this)" })
            <br /> <br />

            <script type="text/javascript">ObtenirListeBatiment(@IdActif, "Batiment" + @B);</script>
        }
        
        @Html.DropDownList("Batiment" + ArrayBatiment.Length, new SelectList(string.Empty, "Value", "Text"), "Please select a State",
                                    new { style = "width:250px", @class = "dropdown1", onchange = "AjoutDropDownListBatiment(this)" })
        <br /> <br />

        <script type="text/javascript"> 
            ObtenirListeBatiment(-1, "Batiment" + @ArrayBatiment.Length);
        </script>
        </div>
        
        <div id="Activites">
        @{
        string[] ArrayParametreActivite = new string[1];
        ArrayParametreActivite[0] = ";";
        string[] ArrayActivite = @Model.BatimentIds.Split(ArrayParametreActivite, StringSplitOptions.RemoveEmptyEntries);
        }
        @for (int A = 0; A < ArrayActivite.Length; A++)
        {
            int IdActif = Convert.ToInt32(ArrayActivite[A]);
            @Html.DropDownList("Activite" + A, new SelectList(string.Empty, "Value", "Text"), "Please select a State",
                                             new { style = "width:250px", @class = "dropdown1", onchange = "AjoutDropDownListActivite(this)" })
            <br /> <br />

            <script type="text/javascript">ObtenirListeActivite(@IdActif, "Activite" + @A);</script>
        }
        
        @Html.DropDownList("Activite" + ArrayActivite.Length, new SelectList(string.Empty, "Value", "Text"), "Please select a State",
                                     new { style = "width:250px", @class = "dropdown1", onchange = "AjoutDropDownListActivite(this)" })
        <br /> <br />

        <script type="text/javascript"> 
            ObtenirListeActivite(-1, "Activite" + @ArrayActivite.Length);
        </script>
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Retour à l'index", "Admin")
</div>
